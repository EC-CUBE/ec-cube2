name: E2E testing for EC-CUBE
run-name: E2E testing for EC-CUBE

on:
  workflow_call:
    inputs:
      ref_name:
        required: false
        type: string
      base_ref:
        required: false
        type: string
      event_name:
        required: true
        type: string
      owner:
        required: true
        type: string
jobs:
  run-on-linux:
    name: Run on Linux
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        pattern:
          - 'test:e2e'
          - 'test:e2e-extends'
        group:
          - 'test/front_login'
          - 'test/front_guest'
          - 'test/admin'
        php: [ '7.4', '8.0', '8.1', '8.2', '8.3' ]
        db: [ mysql, pgsql ]
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build docker image
      uses: ./.github/actions/dockerbuild
      with:
        php-version: ${{ matrix.php }}

    # - name: Create ADMIN_DIR
    #   run: |
    #     sudo apt-fast install -y sharutils
    #     echo "ADMIN_DIR=$(head -c 10 < /dev/random | uuencode -m - | tail -n 2 |head -n 1 |  sed 's,[/+],_,g' | head -c10)/" >> $GITHUB_ENV
    - name: Setup environment
      run: echo "COMPOSE_FILE=docker-compose.yml:docker-compose.pgsql.yml:docker-compose.dev.yml:docker-compose.owaspzap.yml:docker-compose.owaspzap.daemon.yml" >> $GITHUB_ENV

    - name: Setup environment
      env:
        REF_NAME: ${{ inputs.ref_name }}
        BASE_REF: ${{ inputs.base_ref }}
        EVENT_NAME: ${{ inputs.event_name }}
        OWNER: ${{ inputs.owner }}
        DB: ${{ matrix.db }}
        PHP: ${{ matrix.php }}
      run: |
        echo "COMPOSE_FILE=docker-compose.yml:docker-compose.${DB}.yml:docker-compose.dev.yml:docker-compose.owaspzap.yml:docker-compose.owaspzap.daemon.yml" >> $GITHUB_ENV
        echo "IMAGE_NAME=${OWNER,,}/ec-cube2-php" >> $GITHUB_ENV
        if [ $EVENT_NAME = "pull_request" ]; then
          echo "TAG=${PHP}-apache-${BASE_REF}" >> $GITHUB_ENV
        else
          echo "TAG=${PHP}-apache-${REF_NAME}" >> $GITHUB_ENV
        fi
    - if: matrix.pattern == 'test:e2e-extends'
      run: cp -rp tests/class/fixtures/page_extends/* data/class_extends/page_extends

    - name: Setup to EC-CUBE
      run: |
        sudo chown -R 1001:1000 zap
        sudo chmod -R g+w zap
        docker compose up -d --wait
        docker compose exec -T ec-cube composer install
        docker compose exec -T ec-cube composer require ec-cube2/cli "dev-master@dev" --ignore-platform-req=php -W
        docker compose exec -T ec-cube composer update 'symfony/*' --ignore-platform-req=php -W
        docker compose exec -T ec-cube php data/vendor/bin/eccube eccube:fixtures:generate --products=5 --customers=1 --orders=5

    - if: ${{ matrix.db == 'pgsql' }}
      run: |
        docker compose exec -T postgres psql --user=eccube_db_user eccube_db -c "UPDATE dtb_customer SET email = 'zap_user@example.com' WHERE customer_id = (SELECT MAX(customer_id) FROM dtb_customer WHERE status = 2 AND del_flg = 0);"

    - if: ${{ matrix.db == 'mysql' }}
      run: |
        docker compose exec mysql mysql --user=eccube_db_user --password=password eccube_db -e "UPDATE dtb_customer SET email = 'zap_user@example.com' WHERE customer_id = (SELECT customer_id FROM (SELECT MAX(customer_id) FROM dtb_customer WHERE status = 2 AND del_flg = 0) AS A);"

    - run: sleep 1
    - run: |
        yarn install
        yarn run playwright install --with-deps chromium
        yarn playwright install-deps chromium

    - name: Run to E2E testing
      env:
        GROUP: ${{ matrix.group }}
        PATTERN: ${{ matrix.pattern }}
        HTTPS_PROXY: 'localhost:8090'
        HTTP_PROXY: 'localhost:8090'
        CI: 1
        FORCE_COLOR: 1
      run: yarn ${PATTERN} e2e-tests/${GROUP}

    - name: Upload evidence
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: linux-php${{ matrix.tag }}-${{ matrix.db }}-evidence
        path: 'test-results/'
    - name: Upload logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: linux-php${{ matrix.php }}-${{ matrix.db }}-logs
        path: data/logs
  installer:
    name: Installer test
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        db: [ 'pgsql', 'mysql' ]
        php: [ '7.4', '8.0', '8.1', '8.2', '8.3' ]
        include:
          - db: mysql
            dbport: '3306'
            dbuser: 'eccube_db_user'
            dbpass: 'password'
            dbname: 'eccube_db'
            dbhost: 'mysql'
          - db: pgsql
            dbport: '5432'
            dbuser: 'eccube_db_user'
            dbpass: 'password'
            dbname: 'eccube_db'
            dbhost: 'postgres'
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build docker image
      uses: ./.github/actions/dockerbuild
      with:
        php-version: ${{ matrix.php }}

    - name: Setup environment
      env:
        REF_NAME: ${{ inputs.ref_name }}
        BASE_REF: ${{ inputs.base_ref }}
        EVENT_NAME: ${{ inputs.event_name }}
        OWNER: ${{ inputs.owner }}
        DB: ${{ matrix.db }}
        PHP: ${{ matrix.php }}
      run: |
        echo "COMPOSE_FILE=docker-compose.yml:docker-compose.${DB}.yml:docker-compose.dev.yml:docker-compose.owaspzap.yml:docker-compose.owaspzap.daemon.yml" >> $GITHUB_ENV
        echo "IMAGE_NAME=${OWNER,,}/ec-cube2-php" >> $GITHUB_ENV
        if [ $EVENT_NAME = "pull_request" ]; then
          echo "TAG=${PHP}-apache-${BASE_REF}" >> $GITHUB_ENV
        else
          echo "TAG=${PHP}-apache-${REF_NAME}" >> $GITHUB_ENV
        fi

    - name: Setup to EC-CUBE
      env:
        HTTP_URL: https://127.0.0.1:8085/
        HTTPS_URL: https://127.0.0.1:8085/
        PHP_VERSION_TAG: ${{ matrix.php }}
      run: |
        sudo chown -R 1001:1000 zap
        sudo chmod -R g+w zap
        sh -c 'echo "<?php" >> data/config/config.php'
        docker compose up -d --wait
        docker compose exec -T ec-cube composer install

    - run: sleep 1
    - run: |
        yarn install
        yarn run playwright install --with-deps chromium
        yarn playwright install-deps chromium
    - run: |
        rm data/config/config.php
        chmod -R o+w html
        chmod o+w data
        chmod -R o+w data/Smarty
        chmod -R o+w data/cache
        chmod -R o+w data/class
        chmod -R o+w data/class_extends
        chmod o+w data/config
        chmod -R o+w data/download
        chmod -R o+w data/downloads
        chmod o+w data/fonts
        chmod o+w data/include
        chmod o+w data/logs
        chmod -R o+w data/module
        chmod o+w data/smarty_extends
        chmod o+w data/upload
        chmod o+w data/upload/csv

    - name: Run to E2E testing
      env:
        HTTP_PROXY: 'localhost:8090'
        HTTPS_PROXY: 'localhost:8090'
        CI: 1
        FORCE_COLOR: 1
        DB_TYPE: ${{ matrix.db }}
        DB_USER: ${{ matrix.dbuser }}
        DB_PASSWORD: ${{ matrix.dbpass }}
        DB_NAME: ${{ matrix.dbname }}
        DB_PORT: ${{ matrix.dbport }}
        DB_SERVER: ${{ matrix.dbhost }}
      run: yarn test:e2e e2e-tests/test/installer/installer.test.ts
    - name: Upload logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: linux-php${{ matrix.php }}-${{ matrix.db }}-logs
        path: html/install/temp/install.log*
    - name: Upload evidence
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: linux-php${{ matrix.php }}-${{ matrix.db }}-evidence
        path: 'test-results/'
